# Locally test functions : 
# sls invoke local --function create --path mocks/create-event.json
# sls invoke local --function get --path mocks/get-event.json
# sls deploy --aws-profile myProfile

# NOTE: update this with your service name
service: serverless-notes-api

# Create an optimized package for our functions (quicker cold start)
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-3

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.          
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:*"


  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    tableName: notes

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get 
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get     
  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put  
  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete             